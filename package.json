{
  "name": "castle-engine",
  "displayName": "Castle Game Engine",
  "description": "Build and debug Castle Game Engine projects, use Pascal with syntax highlighting and code completion",
  "publisher": "castle-engine-team",
  "author": {
    "name": "Castle Game Engine Team"
  },
  "icon": "images/logo.png",
  "version": "1.0.0",
  "homepage": "https://castle-engine.io",
  "sponsor": {
    "url": "https://www.patreon.com/castleengine"
  },
  "keywords": [
    "castle",
    "game",
    "engine",
    "cge",
    "gamedev",
    "pascal",
    "freepascal",
    "fpc",
    "lazarus",
    "delphi"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/castle-engine/castle-engine-vscode.git"
  },
  "license": "MIT",
  "engines": {
    "vscode": "^1.82.0"
  },
  "categories": [
    "Programming Languages",
    "Debuggers"
  ],
  "activationEvents": [
    "workspaceContains:CastleEngineManifest.xml",
    "onLanguage:pascal"
  ],
  "main": "./src/extension.js",
  "capabilities": {
    "untrustedWorkspaces": {
      "supported": false,
      "description": "Untrusted workspaces are not supported."
    }
  },
  "contributes": {
    "languages": [
      {
        "id": "pascal",
        "extensions": [
          ".pas",
          ".pp",
          ".inc",
          ".lpr",
          ".dpr"
        ]
      }
    ],
    "debuggers": [
      {
        "type": "castleDebug",
        "label": "Debug Castle Game Engine Project"
      }
    ],
    "commands": [
      {
        "command": "castle-engine.compile",
        "title": "Compile (Castle Game Engine)"
      },
      {
        "command": "castle-engine.run",
        "title": "Run (Castle Game Engine)"
      },
      {
        "command": "castle-engine.clean",
        "title": "Clean (Castle Game Engine)"
      },
      {
        "command": "castle-engine.showBuildModeSelectionInStatusBar",
        "title": "Select Build Mode (Castle Game Engine)"
      },
      {
        "command": "castle-engine.openWorkspaceInCastleEditor",
        "title": "Open In Castle Editor (Castle Game Engine)"
      },
      {
        "command": "castle-engine.validateAndOpenSettings",
        "title": "Validate and Open Settings"
      },
      {
        "command": "castle-engine.searchInApiReference",
        "title": "Search in Api Reference (Castle Game Engine)"
      },
      {
        "command": "castle-engine.backInApiReference",
        "title": "Go Back in Api Reference (Castle Game Engine)"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Castle Game Engine",
      "properties": {
        "castleEngine.enginePath": {
          "type": "string",
          "markdowndescription": "Path to the Castle Game Engine location. Leave blank to load from an environment variable (`CASTLE_ENGINE_PATH`).",
          "order": 0
        },
        "castleEngine.pascalLanguageServer.PP": {
          "type": "string",
          "markdownDescription": "Path to Free Pascal compiler (e.g. `/usr/local/bin/fpc`). Leave blank to load from an environment variable (`PP`) or use auto-detection. In particular we will auto-detect FPC bundled with CGE.",
          "order": 1
        },
        "castleEngine.pascalLanguageServer.FPCDIR": {
          "type": "string",
          "markdownDescription": "Path to Free Pascal sources (e.g. `/usr/local/share/fpcsrc`). Leave blank to load from an environment variable (`FPCDIR`) or use auto-detection.",
          "order": 2
        },
        "castleEngine.pascalLanguageServer.LAZARUSDIR": {
          "type": "string",
          "markdownDescription": "Path to Lazarus sources (e.g. `/usr/local/share/lazsrc`). Leave blank to load from an environment variable (`LAZARUSDIR`) or use auto-detection. Note that Lazarus is optional, only used for code completion of LCL units.",
          "order": 3
        },
        "castleEngine.pascalLanguageServer.FPCTARGET": {
          "type": "string",
          "markdownDescription": "Target platform (`windows`, `linux`, `darwin`). Leave blank for auto-detection.",
          "order": 4
        },
        "castleEngine.pascalLanguageServer.FPCTARGETCPU": {
          "type": "string",
          "markdownDescription": "Target CPU (e.g. `x86_64`). Leave blank for auto-detection.",
          "order": 5
        },
        "castleEngine.engineDeveloperMode": {
          "type": "boolean",
          "markdowndescription": "Adds engine symbols to project symbols, to easily jump to engine source code.",
          "default": false,
          "order": 6
        }
      }
    },
    "menus": {
      "webview/context": [
        {
          "command": "castle-engine.backInApiReference",
          "when": "webviewId == 'cge_api_reference'"
        }
      ]
    },
    "problemMatchers": [
      {
        "name": "cge-problem-matcher",
        "fileLocation": "autoDetect",
        "pattern": [
          {
            "regexp": "^([^\\(]+)\\(([\\d+,]+)\\)\\s+(Fatal|Warning|Error|Note|Hint):\\s+((?!\\(10026\\) There were)(?!There were)(?!Found declaration: )(?!\\(5088\\)Found declaration: ).*)$",
            "file": 1,
            "location": 2,
            "severity": 3,
            "message": 4
          }
        ],
        "owner": "cge"
      }
    ],
    "taskDefinitions": [
      {
        "type": "cge-tasks",
        "required": [],
        "properties": {}
      }
    ],
    "keybindings": [
      {
        "command": "castle-engine.compile",
        "key": "ctrl+f9",
        "mac": "cmd+f9",
        "when": "editorTextFocus"
      },
      {
        "command": "castle-engine.run",
        "key": "shift+f9",
        "when": "editorTextFocus"
      },
      {
        "command": "castle-engine.searchInApiReference",
        "key": "ctrl+f1",
        "mac": "cmd+f1",
        "when": "editorTextFocus"
      },
      {
        "command": "editor.action.revealDeclaration",
        "key": "ctrl+f12",
        "mac": "cmd+f12",
        "when": "editorTextFocus"
      }
    ]
  },
  "scripts": {
    "lint": "eslint .",
    "pretest": "npm run lint",
    "test": "node ./test/runTest.js"
  },
  "dependencies": {
    "vscode-languageclient": "^9.0.0"
  },
  "devDependencies": {
    "@types/vscode": "^1.82.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "eslint": "^8.47.0",
    "glob": "^10.3.3",
    "mocha": "^10.2.0",
    "typescript": "^5.1.6",
    "@vscode/test-electron": "^2.3.8"
  },
  "extensionDependencies": [
    "theangryepicbanana.language-pascal",
    "cnoc.fpdebug"
  ]
}
